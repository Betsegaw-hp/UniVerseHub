<% console.log(post) %>

<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('../partials/head')  %> 
       <style>
        .sidebar-sticky {
            flex: 1;
            position: sticky;
            top: 0;
            height: 100vh;
            padding-top: 10px;
        }

       </style>

        <!-- Include the timeLapse.js file -->
        <script src="/timeLapse.js"></script>
    </head>
<body>
    <%- include('../partials/nav')  %>

    <div class="container mt-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/forum">Forum</a></li>
                <li class="breadcrumb-item"><a href="/forum/category/<%= post.category.name %>"><%= post.category.name %></a></li>
                <li class="breadcrumb-item active" aria-current="page"><%= post.title %></li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-md-9">
                <div class="card mb-4">
                    <div class="card-body">
                        <h1 class="card-title capitalize"><%= post.title %></h1>
                        <div class="d-flex align-items-center mb-3">
                            <img src="<%= post.author.avatarUrl %>" alt="<%= post.author.name %>" class="avatar border border-warning me-3">
                            <div>
                                <h5 class="mb-0 capitalize"><%= post.author.name %></h5>
                                <a class="text-decoration-none" href="/profile/<%= post.author.username %>">
                                    <small class="mb-0 text-muted">@<%= post.author.username %></small>
                                </a>
                                · <small class="text-muted">Posted on <%= post.createdAt.toUTCString() %></small>
                            </div>
                        </div>
                        <p><%= post.content %></p>
                        <div class="mt-3 action-container">
                            <button id="like-btn" class="btn btn-outline-primary me-2 <%= post.hasLiked ? "active" : "" %> " 
                                    data-bs-toggle="button" data-liked="<%= post.hasLiked %>">
                                <i class="bi bi-hand-thumbs-up"></i> Like <span id="like-count">(<%= post.likeCount %>)</span>
                            </button>
                            <button class="btn btn-outline-secondary"><i class="bi bi-bookmark"></i> Save</button>
                            
                            <% if(user._id.toString() === post.author._id.toString()) { %>
                            <div class="post_privilages">
                                <div id="editPostBtn" class="edit-btn" data-bs-toggle="modal" data-bs-target="#editTopicModal"><i class="bi bi-pencil"></i></div>
                                <div class="dlt-btn"><i class="bi bi-trash"></i></div>
                            </div>
                            <% } else if (user.roles.includes('admin')){ %>
                                <div class="dlt-btn"><i class="bi bi-trash"></i></div>
                            <% } %>
                            
                        </div>
                    </div>
                </div>

                <h3 class="mb-3"> 
                    <abbr title="Number of comment shown here is limited by admin. it will replace the old if it is over the limit.">Comments </abbr>
                    (<%=  post.recentComments.length %>) 
                </h3>
                <!-- old comment form design -->
                <!-- <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Add a comment</h5>
                        <form id="commentForm">
                            <div class="mb-3">
                                <textarea class="form-control" rows="1" name="content" placeholder="Write your comment here..."></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Post Comment</button>
                        </form>
                    </div>
                </div> -->
                
                <div class="card shadow-sm mb-4">
                    <div class="card-body row gap-2 p-4">
                        <img src="<%= user.avatarUrl %>" alt="avatar" class="col-md-1 shadow-sm avatar border border-warning" />
                        <form id="commentForm" class="col">
                            <div class="mb-3 position-relative">
                                <textarea class="form-control form-control-sm border-0 bg-light" 
                                          rows="2" 
                                          name="content" 
                                          placeholder="Share your thoughts..."
                                          style="resize: none; outline: none;" required aria-required="true"></textarea>
                                <div class="position-absolute bottom-0 end-0 p-3">
                                    <span class="text-muted" id="charCount">0/500</span>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <button type="submit" class="btn btn-dark px-4 py-2 btn-sm">
                                    <i class="bi bi-send me-2"></i>Comment
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
                <% if (post.recentComments.length > 0) { %>
                    <% post.recentComments.map(comment => { %>
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex">
                                    <img src="<%= comment.author.avatarUrl %>" alt="<%= comment.author.name %>" class="comment-avatar border border-warning me-3">
                                    <div class="flex-grow-1">
                                        <h5 class="mb-0 capitalize"><%= comment.author.name %></h5>
                                        <small class="text-muted">@<%= comment.author.username %> 
                                            <% if(comment.author._id.toString() === post.author._id.toString()) {%>
                                                <span class="mark">Author</span>
                                            <% } %>
                                        </small> · <small class="timePassed" data-date="<%= comment.createdAt %>"></small>
                                        <p class="mt-2"><%= comment.content %></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } %>
            </div>
            <div class="col-md-3 sidebar-sticky">
                <div class="card mb-4">
                    <div class="card-header">
                        <!-- minus the post it self -->
                        Related Topics (<%= post.relatedPosts.length - 1 %>)
                    </div>
                    <% if (post.relatedPosts.length > 0) { %>
                        <ul class="list-group list-group-flush">
                            <% post.relatedPosts.slice(0,5).forEach(otherPost => { %>
                                <% if(otherPost._id.toString() !== post._id.toString() ) { %>
                                <li class="list-group-item"><a href="/forum/<%= otherPost._id %>" class="text-decoration-none"><%= otherPost.title %></a></li>
                                <% } %>
                            <% }) %>
                        </ul>
                    <% } else { %>
                        <i> No relevent posts on this topic</i>
                    <% } %>
                </div>
                <div class="card">
                    <div class="card-header">
                        Forum Guidelines
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled mb-0">
                            <li><i class="bi bi-check-circle text-success me-2"></i>Be respectful to others</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>Stay on topic</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>No spam or self-promotion</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>Report inappropriate content</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

     <!-- edit Topic Modal -->
     <div class="modal fade" id="editTopicModal" tabindex="-1" aria-labelledby="editTopicModalLabel" data-postId="<%= post._id %>" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editTopicModalLabel">Edit Topic</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="post_form">
                        <div class="mb-3">
                            <label for="topicTitle" class="form-label">Topic Title</label>
                            <input type="text" class="form-control" id="topicTitle" value="<%= post.title %>" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="topicCategory" class="form-label">Category</label>
                            <select class="form-select" id="topicCategory" name="category" required>
                                <option value="" >Choose a category...</option>
                                <% if (post.categoryCollec.length > 0) { %>
                                    <% post.categoryCollec.forEach(category => { %>
                                        <option value="<%= category.name %>" 
                                                <%= (category.name === post.category.name) ? "selected": "" %> >
                                            <%= category.name %>
                                        </option>
                                    <% }) %>
                                <% } else { %>
                                    <option value="" disabled>here is no category to display...</option>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="topicContent" class="form-label">Content</label>
                            <textarea class="form-control" 
                                      id="topicContent" value="<%= post.content %>"
                                      rows="5" name="body_content" required><%= post.content %></textarea>
                        </div>
                    </form>
                    <div id="form_alert" style="cursor:not-allowed;" class="alert alert-danger fade" role="alert">
                        <p id="alert_msg"></p> 
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" form="post_form" class="btn btn-primary">Done</button>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer')  %> 

    <script>
        const form = document.querySelector("#post_form");
        const form_alert = document.querySelector("#form_alert");
        const alert_msg = document.querySelector("#alert_msg");
        const postIdParent = document.querySelector("#editTopicModal");
        const dltBtn = document.querySelector(".dlt-btn");

        form.addEventListener("submit", (e) => {
            e.preventDefault();

            const title = form.title.value;
            const body_content = form.body_content.value;
            const category = form.category.value;


            const options = {
               method: "PUT",
               headers: { 'Content-Type': 'application/json' },
               body: JSON.stringify({
                 title: title,
                 body_content: body_content,
                 category: category,
                 postId: postIdParent.dataset.postid
               })
            }

            fetch("/forum", options)
            .then(res => res.json())
            .then(data => {
                if(data.errors) {
                    console.log(data.errors)
                    form_alert.classList.add('show');
                    let msg = null;
                    if(data.errors.title != '') msg = data.errors.title;
                    else if(data.errors.content != '') msg = data.errors.content;
                    else if(data.errors.category != '') msg = data.errors.category;

                    if(!msg) msg = "Unexpected Error occured. ";
                    alert_msg.textContent = msg
                    console.log(msg)
                }
                if (data.post) {
                    location.reload();
                }
            })
            .catch(err => console.error(err));
        });

        form_alert.addEventListener("click", (e) => {
            form_alert.classList.remove('show');
        })


        dltBtn && dltBtn.addEventListener("click", (e) => {

            const endpoint = `/forum/${postIdParent.dataset.postid}`

            fetch(endpoint, { method: 'DELETE'})
            .then( res => res.json())
            .then(data => window.location.href = data.redirect )
            .catch(err =>console.log(err))
        });

    
        // comment service
        const commentForm = document.querySelector("#commentForm");

        commentForm.addEventListener("submit", async (e) => {
            e.preventDefault();

            const postId = postIdParent.dataset.postid; 

            try {
                const response = await fetch(`/forum/${postId}/comment`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ content: commentForm.content.value })
                });

                const data = await response.json();
                
                if (response.ok) {
                    location.reload();
                } else {
                    console.error(data.error);
                }
            } catch (error) {
                console.error("Error liking post:", error);
            }
        });


        // like btn service
        const likeBtn = document.querySelector("#like-btn");

        likeBtn && likeBtn.addEventListener("click", async (e) => {
            e.preventDefault();

            const postId = postIdParent.dataset.postid;  
            const likeCountSpan = document.getElementById('like-count');

            const isLiked = likeBtn.dataset.liked === 'true';

            try {
                const response = await fetch(`/forum/${postId}/like`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const data = await response.json();
                
                if (response.ok) {
                    // Update the UI
                    likeBtn.dataset.liked = !isLiked;
                    likeCountSpan.textContent = `(${data.likeCount})`;
                } else {
                    console.error(data.error);
                }
            } catch (error) {
                console.error("Error liking post:", error);
            }
        })

    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const timeEle = document.querySelectorAll('.timePassed');
            timeEle.forEach(ele => {
                const createdAt = ele.dataset.date; // Assuming post.createdAt is in ISO format
                const timePassedStr = timePassed(createdAt);
                ele.textContent = timePassedStr;
            });
        });
    </script>

    <script>
        const maxLength = 150;
        document.getElementById("charCount").textContent = `0/${maxLength}`;

        document.querySelector('textarea[name="content"]').addEventListener('input', function() {
            const currentLength = this.value.length;
            const charCountElement = document.getElementById('charCount');
            charCountElement.textContent = `${currentLength}/${maxLength}`;
            
            if (currentLength > maxLength) {
                charCountElement.classList.add('text-danger');
                this.value = this.value.substring(0, maxLength);
            } else {
                charCountElement.classList.remove('text-danger');
            }
        });
    </script>
</body>
</html>