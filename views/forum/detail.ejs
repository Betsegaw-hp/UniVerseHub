<%  %>

<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('../partials/head')  %> 
        <style>
            /* Custom styles for the comment input section */
            .comment-input-container {
                display: flex;
                gap: 15px;
                align-items: flex-start;
                width: 100%;
            }
    
            .comment-avatar-wrapper {
                position: sticky;
                top: 10px;
                flex-shrink: 0;
            }
    
            .comment-form-wrapper {
                flex: 1;
                min-width: 0; /* Prevents flex item from overflowing */
            }
    
            .comment-textarea {
                border-radius: 18px !important;
                padding: 12px 15px !important;
                transition: all 0.2s ease;
            }
    
            .comment-textarea:focus {
                background-color: #f8f9fa !important;
                box-shadow: 0 0 0 0.2rem rgba(13, 148, 136, 0.15) !important;
            }
    
            .btn-teal {
                background-color: #0d9488;
                border-color: #0d9488;
                color: white;
                transition: all 0.2s ease;
            }
    
            .btn-teal:hover {
                background-color: #0f766e;
                border-color: #0f766e;
                color: white;
            }

            .post-content {
                max-height: 300px;
                overflow-y: auto;
                padding: 10px;
                border-radius: 10px;
                background-color: #f8f9fa48;
            }
            .post-content::-webkit-scrollbar {
                width: 8px;
            }
            .post-content .ql-code-block-container {
                position: relative;
                margin-bottom: 1rem;
            }
            .post-content .ql-code-block {
                padding: 10px;
                background-color: #f8f9fa;
                border-radius: 5px;
                overflow-x: auto;
            }
            .post-content blockquote {
                padding: 10px;
                background-color: #f1f6fc;
                border-left: 5px solid #0d9488;
                margin: 0;
                border-radius: 5px;
            }
    
            @media (max-width: 576px) {
                .comment-input-container {
                    gap: 10px;
                }
                
                .comment-avatar {
                    width: 40px;
                    height: 40px;
                }
            }
    
            /* Hide the general alert by default */
            #general_post_alert {
                display: none;
            }
        </style>    
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.bubble.css" rel="stylesheet" />

        <!-- Include the timeLapse.js file -->
        <script src="/timeLapse.js"></script>
    </head>
<body>
    <%- include('../partials/nav')  %>

    <div class="container mt-4">
        <div id="general_post_alert" class="alert alert-danger gap-2 align-items-center" role="alert">
            <span><i class="bi bi-exclamation-triangle"></i></span>
            <div id="general_post_alert_msg">
              Something Unexpected happend
            </div>
        </div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/forum">Forum</a></li>
                <li class="breadcrumb-item"><a href="/forum/category/<%= post.category.name %>"><%= post.category.name %></a></li>
                <li class="breadcrumb-item active" aria-current="page"><%= post.title %></li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-md-9">
                <div class="card mb-4">
                    <div class="card-body">
                        <h1 class="card-title capitalize"><%= post.title %></h1>
                        <div class="d-flex align-items-center mb-3">
                            <img src="<%= post.author.avatarUrl %>" alt="<%= post.author.name %>" class="avatar border border-warning me-3">
                            <div>
                                <h5 class="mb-0 capitalize"><%= post.author.name %></h5>
                                <a class="text-decoration-none" href="/profile/<%= post.author.username %>">
                                    <small class="mb-0 text-muted">@<%= post.author.username %></small>
                                </a>
                                · <small class="text-muted">Posted on <%= post.createdAt.toUTCString() %></small>
                            </div>
                        </div>
                        <div class="post-content mb-3">
                            <%- post.content %>
                        </div>
                        <div class="mt-3 action-container">
                            <button id="like-btn" class="btn btn-outline-primary me-2 <%= post.hasLiked ? "active" : "" %> " 
                                    data-bs-toggle="button" data-liked="<%= post.hasLiked %>">
                                <i class="bi bi-hand-thumbs-up"></i> Like <span id="like-count">(<%= post.likeCount %>)</span>
                            </button>
                            <button class="btn btn-outline-secondary"><i class="bi bi-bookmark"></i> Save</button>
                            
                            <div class="privilages">
                            <% if(user._id.toString() === post.author._id.toString()) { %>
                                    <div id="editPostBtn" class="edit-btn" data-bs-toggle="modal" data-bs-target="#editTopicModal"><i class="bi bi-pencil"></i></div>
                                    <div class="dlt-btn"><i class="bi bi-trash"></i></div>
                               
                            <% } else if (user.role === 'moderator' || user.role === "admin" ){ %>
                                <div class="dlt-btn"><i class="bi bi-trash"></i></div>
                            <% } %>
                             </div>
                        </div>
                    </div>
                </div>

                <h3 class="mb-3"> 
                    <abbr title="Number of comment shown here is limited by admin. it will replace the old if it is over the limit.">Comments </abbr>
                    (<%=  post.recentComments.length %>) 
                </h3>
                <div class="card shadow-sm mb-4">
                    <div class="card-body p-4">
                        <div class="comment-input-container">
                            <div class="comment-avatar-wrapper">
                                <img src="<%= user.avatarUrl %>" alt="avatar" class="comment-avatar border border-warning shadow-sm" />
                            </div>
                            <form id="commentForm" class="comment-form-wrapper">
                                <div class="mb-3 position-relative">
                                    <textarea class="form-control form-control-sm border-0 bg-light comment-textarea" 
                                              rows="2" 
                                              name="content" 
                                              placeholder="Share your thoughts..."
                                              style="resize: none; outline: none;" required aria-required="true"></textarea>
                                    <div class="position-absolute bottom-0 end-0 p-3">
                                        <span class="text-muted" id="charCount">0/500</span>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <button type="submit" class="btn btn-teal px-4 py-2 btn-sm">
                                        <i class="bi bi-send me-2"></i>Comment
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                
                <% if (post.recentComments.length > 0) { %>
                    <% post.recentComments.map(comment => { %>
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex">
                                    <img src="<%= comment.author.avatarUrl %>" alt="<%= comment.author.name %>" class="comment-avatar border border-warning me-3">
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between">
                                            <h5 class="mb-0 capitalize"><%= comment.author.name %></h5>
                                            <button class="btn " data-conmment-id="<%= comment._id %>"><i class="bi bi-dots">...</i></button>
                                        </div>
                                        <a class="text-decoration-none" href="/profile/<%= comment.author.username %>">
                                            <small class="text-muted">@<%= comment.author.username %> 
                                        </a>
                                            <% if(comment.author._id.toString() === post.author._id.toString()) {%>
                                                <span class="mark">Author</span>
                                            <% } %>
                                        </small> · <small class="timePassed" data-date="<%= comment.createdAt %>"></small>
                                        <p class="mt-2"><%= comment.content %></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } %>
                
            </div>
            <div class="col-md-3 sidebar-sticky">
                <div class="card mb-4">
                    <div class="card-header">
                        <!-- minus the post it self -->
                        Related Topics (<%= post.relatedPosts.length - 1 %>)
                    </div>
                    <% if (post.relatedPosts.length > 0) { %>
                        <ul class="list-group list-group-flush">
                            <% post.relatedPosts.slice(0,5).forEach(otherPost => { %>
                                <% if(otherPost._id.toString() !== post._id.toString() ) { %>
                                <li class="list-group-item"><a href="/forum/<%= otherPost._id %>" class="text-decoration-none"><%= otherPost.title %></a></li>
                                <% } %>
                            <% }) %>
                        </ul>
                    <% } else { %>
                        <i> No relevent posts on this topic</i>
                    <% } %>
                </div>
                <div class="card">
                    <div class="card-header">
                        Forum Guidelines
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled mb-0">
                            <li><i class="bi bi-check-circle text-success me-2"></i>Be respectful to others</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>Stay on topic</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>No spam or self-promotion</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>Report inappropriate content</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

     <!-- Edit Topic Modal -->
    <div class="modal fade" id="editTopicModal" tabindex="-1" aria-labelledby="editTopicModalLabel" data-postId="<%= post._id %>" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editTopicModalLabel">Edit Topic</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="post_form">
                        <div class="mb-3">
                            <label for="topicTitle" class="form-label">Topic Title</label>
                            <input type="text" class="form-control" id="topicTitle" value="<%= post.title %>" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="topicCategory" class="form-label">Category</label>
                            <select class="form-select" id="topicCategory" name="category" required>
                                <option value="">Choose a category...</option>
                                <% if (post.categoryCollec.length > 0) { %>
                                    <% post.categoryCollec.forEach(category => { %>
                                        <option value="<%= category.name %>" 
                                                <%= (category.name === post.category.name) ? "selected": "" %> >
                                            <%= category.name %>
                                        </option>
                                    <% }) %>
                                <% } else { %>
                                    <option value="" disabled>There are no categories to display...</option>
                                <% } %>
                            </select>
                        </div>

                        <!-- Quill Editor for Content -->
                        <div class="mb-3">
                            <input type="hidden" id="topic-content" name="topicContentHolder" value="<%= post.content %>" hidden aria-hidden="true"/>
                            <label for="topicContent" class="form-label">Content</label>
                            <div id="topicContentEditor" style="height: 300px;"></div>
                            <i class="bi bi-info-circle"></i><small class="text-muted">Highlight the text you want to format</small>
                        </div>
                    </form>
                    <div id="form_alert" style="cursor:not-allowed;" class="alert alert-danger fade" role="alert">
                        <p id="alert_msg"></p> 
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" form="post_form" class="btn btn-primary">Done</button>
                </div>
            </div>
        </div>
    </div>


    <%- include('../partials/footer')  %> 
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script>
    <script>
        const form = document.querySelector("#post_form");
        const form_alert = document.querySelector("#form_alert");
        const alert_msg = document.querySelector("#alert_msg");
        const postIdParent = document.querySelector("#editTopicModal");
        const dltBtn = document.querySelector(".dlt-btn");

        const general_post_alert = document.querySelector("#general_post_alert");
        const general_post_alert_msg = document.querySelector("#general_post_alert_msg");

        const topicContentEditor = document.getElementById('topicContentEditor');

        const quill = new Quill('#topicContentEditor', {    
            theme: 'bubble',
            modules: {
                toolbar: [
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    ['link', 'video'],
                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                    [{ 'align': [] }],
                    ['clean']
                ]
            }
        });
        const topicContent = form.topicContentHolder.value || "";
        quill.root.innerHTML = topicContent;



        form.addEventListener("submit", (e) => {
            e.preventDefault();

            const title = form.title.value;
            const body_content = quill.root.innerHTML;
            const pure_body_content = quill.getText().trim();
            const category = form.category.value;


            const options = {
               method: "PUT",
               headers: { 'Content-Type': 'application/json' },
               body: JSON.stringify({
                 title: title,
                 body_content: body_content,
                 pureTextContent: pure_body_content,
                 category: category,
                 postId: postIdParent.dataset.postid
               })
            }

            fetch("/forum", options)
            .then(res => res.json())
            .then(data => {
                if(data.errors) {
                    console.log(data.errors)
                    form_alert.classList.add('show');
                    let msg = null;
                    Object.entries(data.errors).map(entry => {
                        let key = entry[0];
                        let value = entry[1];

                        if(value != '') msg = value;
                    })

                    if(!msg) msg = "Unexpected Error occured. ";
                    alert_msg.textContent = msg
                    console.log(msg)
                }
                if (data.post) {
                    location.reload();
                }
            })
            .catch(err => console.error(err));
        });

        form_alert.addEventListener("click", (e) => {
            form_alert.classList.remove('show');
        })

        general_post_alert.style.display = "none";
        console.log(general_post_alert)
        let alertTimeOut;

        dltBtn && dltBtn.addEventListener("click", (e) => {
            const isConfirmed =  confirm("Are you sure you want to Delete this post?");
            clearTimeout(alertTimeOut);

            if(!isConfirmed) return ;

            const endpoint = `/forum/${postIdParent.dataset.postid}`

            fetch(endpoint, { method: 'DELETE'})
            .then( res => res.json())
            .then(data => {
                if(data.error) {
                    general_post_alert.style.display = "flex";
                    general_post_alert_msg.textContent = `${data.error}`;

                    alertTimeOut =  setTimeout(()=> {
                        general_post_alert.style.display = "none";
                    }, 4000);
                }
                if(data.redirect) {
                    window.location.href = data.redirect;
                }
            } )
            .catch(err =>console.log(err))
        });

    
        // comment service
        const commentForm = document.querySelector("#commentForm");

        commentForm.addEventListener("submit", async (e) => {
            e.preventDefault();

            const postId = postIdParent.dataset.postid; 

            try {
                const response = await fetch(`/forum/${postId}/comment`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ content: commentForm.content.value })
                });

                const data = await response.json();
                
                if (response.ok) {
                    location.reload();
                } else {
                    console.error(data.error);
                }
            } catch (error) {
                console.error("Error liking post:", error);
            }
        });


        // like btn service
        const likeBtn = document.querySelector("#like-btn");

        likeBtn && likeBtn.addEventListener("click", async (e) => {
            e.preventDefault();

            const postId = postIdParent.dataset.postid;  
            const likeCountSpan = document.getElementById('like-count');

            const isLiked = likeBtn.dataset.liked === 'true';

            try {
                const response = await fetch(`/forum/${postId}/like`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const data = await response.json();
                
                if (response.ok) {
                    // Update the UI
                    likeBtn.dataset.liked = !isLiked;
                    likeCountSpan.textContent = `(${data.likeCount})`;
                } else {
                    console.error(data.error);
                }
            } catch (error) {
                console.error("Error liking post:", error);
            }
        })

    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const timeEle = document.querySelectorAll('.timePassed');
            timeEle.forEach(ele => {
                const createdAt = ele.dataset.date; // Assuming post.createdAt is in ISO format
                const timePassedStr = timePassed(createdAt);
                ele.textContent = timePassedStr;
            });
        });
    </script>

    <script>
        const maxLength = 150;
        document.getElementById("charCount").textContent = `0/${maxLength}`;

        document.querySelector('textarea[name="content"]').addEventListener('input', function() {
            const currentLength = this.value.length;
            const charCountElement = document.getElementById('charCount');
            charCountElement.textContent = `${currentLength}/${maxLength}`;
            
            if (currentLength > maxLength) {
                charCountElement.classList.add('text-danger');
                this.value = this.value.substring(0, maxLength);
            } else {
                charCountElement.classList.remove('text-danger');
            }
        });
    </script>
</body>
</html>